<!DOCTYPE html>
<html lang="en">
<head>
    {{> head}}

    <script>
        
    </script>
</head>
<body>

    {{!-- <div class="loading-screen">

        <div class="loader">

            <div class="sq1"></div>
            <div class="sq2"></div>

        </div>

    </div> --}}

    {{> loading_screen}}

    {{#if queryData.currAnime}}


        <div class="modal-overlay">

            <div class="modal-content-wrapper" id="modal-content-wrapper">

                <div class="loading-element">
                    <div class="loader">

                        <div class="sq1"></div>
                        <div class="sq2"></div>

                    </div>
                </div>
                

                {{!-- <div class=""> --}}

                    <div class="modal-top">
                        <button class="btn btn-icon" id="btnCloseReview">
                            <i class="fa-solid fa-xmark"></i>
                        </button>
                    </div>

                    {{!-- <div class="modal-header"> --}}

                        {{!-- TODO: With AJAX, insert review header stuff: Name / Profile pic --}}

                    {{!-- </div> --}}

                    {{!-- <hr> --}}

                    {{!-- <div class="modal-body"> --}}
                        {{!-- TODO: With AJAX, insert body content here --}}

                    {{!-- </div> --}}


                {{!-- </div> --}}

            </div>

        </div>

        <header class="header-anime flex-column-space" data-banner="{{queryData.currAnime.bannerImage}}"
                style="--banner-image: url({{queryData.currAnime.bannerImage}})">
            {{> navbar_other}}

            <div class="container flex-default header-anime-cover-title" style="flex-grow: 0; flex-shrink: 0;">

                <div class="anime-header-cover-image">
                    <img src="{{queryData.currAnime.coverImage.large}}" alt="cover-image">
                </div>

                {{#if queryData.currAnime.title.english}}
                    <h3>{{queryData.currAnime.title.english}}</h3>
                    {{else}}
                    <h3>{{queryData.currAnime.title.romaji}}</h3>
                {{/if}}

            </div>

        </header>

        <div class="container anime-content-wrapper">
            
            <main>

                <div class="main-section main-section-about">
                    <p class="bold main-section-title">About</p>
                    <p class="subtext paragraph">{{{queryData.currAnime.description}}}</p>
                </div>

                <div class="main-section main-section-genres">
                    <p class="bold main-section-title">Genres</p>
                    {{#if queryData.currAnime.genres}}
                        {{#each queryData.currAnime.genres}}
                            <button class="btn btn-genre-details-page"><a href="/search/genres/this"></a>{{this}}</button>
                        {{/each}}  
                    {{/if}}
                    <hr>
                </div>



                <div class="main-section main-section-characters">
                    <p class="bold main-section-title">Characters</p>

                    <div class="page-cards-container scroll scroll-x">
                        {{#if queryData.currAnime.characters}}
                            {{#each queryData.currAnime.characters.edges }}

                            <a href="characters/{{this.id}}">
                                <div class="card page-card character-card" data-character-id="{{this.id}}">
                                    <div class="page-card-image-container">
                                        <img class="card-img" src="{{this.node.image.large}}" alt="character-image">
                                    </div>

                                    <p class="subtext-small bold page-card-name">
                                        {{#if this.node.name.userPreferred}}
                                            {{this.node.name.userPreferred}}

                                            {{else}}
                                        {{/if}}
                                    </p>
                                </div>
                            </a>                                
                            {{/each}}
                        {{/if}}
                    </div>
                </div>

                <div class="main-section">
                    <p class="bold main-section-title">Similar to this</p>

                    <div class="page-cards-container scroll scroll-x">
                        {{#if queryData.currAnime.recommendations}}
                            {{#each queryData.currAnime.recommendations.edges }}
                

                                {{#if this.node.mediaRecommendation}}
                                
                                    <a href="anime/{{this.node.mediaRecommendation.id}}">
                                        <div class="card page-card rec-card" data-media-id="{{this.node.id}}">
                                            
                                            <div class="page-card-image-container">
                                                <img class="card-img" src="{{this.node.mediaRecommendation.coverImage.large}}" alt="anime-cover-image">
                                            </div>
                                            

                                            <p class="subtext-small bold page-card-name">
                                                {{#if this.node.mediaRecommendation.title.english}}

                                                    {{this.node.mediaRecommendation.title.english}}
                                                    
                                                    {{else}}
                                                    {{#if this.node.mediaRecommendation.title.userPreferred}}
                                                        {{this.node.mediaRecommendation.title.userPreferred}}

                                                        {{else}}
                                                        {{this.node.mediaRecommendation.title.romaji}}
                                                    {{/if}}

                                                {{/if}}

                                                
                                            </p>
                                        </div>
                                    </a>
                                {{/if}}

                            {{/each}}
                        {{/if}}
                    </div>

                <hr>
                </div>

                <div class="main-section">

                    <p class="bold main-section-title">Top Reviews</p>

                    {{#if queryData.currAnime.reviews.edges}}
                        
                        {{#each queryData.currAnime.reviews.edges}}

                            
                            <div class="review-container" data-review-id="{{this.node.id}}" data-media-id="{{this.node.mediaId}}">
                                <div class="review-header flex">

                                    {{!-- TODO: Default BG Color. Circle Container --}}
                                    {{!-- TODO: insert avatar in style --}}
                                    <div class="review-header-user-avatar" style="--bg-image: url({{this.node.user.avatar.large}})">
                                    </div>

                                    <div class="review-header-username flex">
                                        <p class="bold light-text subtext-small">{{this.node.user.name}}</p>
                                        <p class="black-dot">&#x2022;</p>
                                        <span class="light-text subtext-small review-date">{{this.node.createdAt}}</span>

                                    </div>
                                </div>
                                <div class="review-body">
                                    <p class="light-text subtext review">{{this.node.summary}}</p>

                                    {{!-- TODO: Insert review id. --}}
                                    {{!-- <form action="/anime/{{this.node.mediaId}/review" method="POST"> --}}
                                        
                                        <button class="btn-text btn-text-open-review light-text btn-open-review">
                                            View full review<span> <i class="fa-solid fa-angles-right"></i></span>
                                        </button>
                                    {{!-- </form> --}}
                                </div>

                                {{!-- Todo: Border on the score instead of an <hr> --}}
                                <div class="review-score-container">
                                    <p class="bold subtext-small light-text">
                                        Rating:<span data-review-score="{{this.node.score}}" 
                                                class="review-score" style="color: #269b85; margin-left: 3px">{{this.node.score}}%</span>
                                    </p>
                                </div>
                            </div>

                        {{/each}}

                        {{else}}
                        <p class="light-text subtext"style="font-style: italic">No reviews for this yet... </p>

                    {{/if}}

                </div>


            </main>

            <aside>

                <div class="trailer-section">

                </div>
                

            </aside>

        </div>
        
    {{/if}}



    {{> footer}}



<script>
// * Utility functions


// Function to change the colors of the rating text.
function colorReviewScore(score, reviewElement) {
        //console.log('called')
        if (score < 70 && score >= 30) {
                console.log('Medium review')
                reviewElement.style.color = '#c76a2b';
            } else if (score < 30) {
                console.log('low review')
                reviewElement.style.color = '#d43535';
            }
}


/**********************************************************************/
// Loading before the document is fully ready.
document.onreadystatechange = function () {

            console.log('Current ready state --> ', document.readyState)
            
            if (document.readyState != 'complete') {

                $('.loading-screen').show()
                console.log('Loading the page...')

                // This will change the colors of the user rating text to match the score value.
                if (document.readyState == 'interactive') {

                    for(let review of $('.review-score')) {
                        
                        let score = review.dataset.reviewScore

                        colorReviewScore(score, review)
                        
                    }
                }

            } 
             else if (document.readyState == 'complete') {
                $('.loading-screen').fadeOut()
                //console.log('Page fully loaded!')
            }
}

/**********************************************************************/
// After the document is ready.


$(document).ready( () => {

    $(document).on({
        ajaxStart: function(event) { 
            console.log('Loading element...')    
        },
        ajaxStop: function() { console.log("Element finished loading."); }    
    });

    // Code that changes the color of the navbar once the user scrolls down.
    $(window).scroll( (event) => {
        if($(window).scrollTop()) {
            // If the scroll position is NOT at the top.

            $('#navbar').addClass('navbar-bg');
        
            // Give the navbar a fixed position. when scrolling the rest of the page.
            const headerHeight = ($('header').height() - 60)
            //console.log(headerHeight)

            if ($(window).scrollTop() >= headerHeight) {
                $('#navbar').addClass('navbar-fixed')
                $('header').addClass('border-top')

                // console.log('END OF HEADER REACHED')
            }
            else {
                $('#navbar').removeClass('navbar-fixed')
                $('header').removeClass('border-top')
            }

        } else {
            
            //If the scroll position of the window is at the top.
            if(!($('#nav-menu').hasClass('nav-menu-open'))) {
                $('#navbar').removeClass('navbar-bg')
            }
            console.log('Back at the top')
        }
    })


    $('#btn-toggle-nav').click( (event) => {
            toggleNav(event)
    })

    function toggleNav(event) {

        if ($('#nav-menu').hasClass('nav-menu-open')) {

            console.log('Menu has it. Removing it...')
            //$('#nav-menu').css('height', 'auto')
            $('#nav-menu').removeClass('nav-menu-open')

            $('#nav-menu').css({'opacity': 0,
                                'pointer-events': 'none'})

            if(!($(window).scrollTop())) {
                $('#navbar').removeClass('navbar-bg')
            }

            // TODO: Turn the button into an x. 

        } else {

            console.log('Menu does not have it, adding it.')
            $('#nav-menu').addClass('nav-menu-open')

            $('#nav-menu').css({'opacity': 1,
                                'pointer-events': 'auto'});


            $('#navbar').addClass('navbar-bg')
            
        }

    }

    function closeNav() {
        $('#nav-menu').css('height', 0)
    }



    // *********************** *************
    // Open review functionality
    $('.btn-open-review').click(async function() {

        const selectedBtn = event.currentTarget.closest('.review-container')

        
        const xhr = $.ajax({
            url: `review/${selectedBtn.getAttribute('data-review-id')}`, 
            method: 'GET',
            beforeSend: function(jq, settings) {

                $('.loading-element').show()
            },
            success: async function(data, status, jq) {

                $('.loading-element').fadeOut()
                const reviewDate =  await getReviewDate(data.Review.createdAt);

                await $(`  
                    <div class="modal-header container-static">

                        <div class="review-header flex">


                            <div class="review-header-user-avatar" style="--bg-image: url(${data.Review.user.avatar.large})">
                            </div>

                            <div class="review-header-username flex">

                            
                                <p class="bold light-text subtext-small">${data.Review.user.name}</p>
                                <p class="black-dot">&#x2022;</p>
                                <span class="light-text subtext-small review-date">${reviewDate}</span>
                                <p class="black-dot">&#x2022;</p>
                                <span data-review-score="${data.Review.score}" 
                                                class="modal-review-score bold subtext-small" 
                                                style="color: #269b85; margin-left: 3px">${data.Review.score}%</span>
                            </div>
                        </div>

                    </div>

                    <div class="modal-body">

                        
                        <div class="container-static">
                            ${data.Review.body}
                        </div>
                    </div>
                
            `).insertAfter('.modal-top')

                const reviewScore = document.querySelector('.modal-review-score')
                
                colorReviewScore(reviewScore.dataset.reviewScore, reviewScore)
            }
        })

        $('.modal-content-wrapper').show()
        $('.modal-overlay').fadeIn()

        $('body').addClass('no-scrollbar')

    })

    const review = document.getElementById('modal-content-wrapper')

    

    $('#btnCloseReview').click(function() {

        $('.modal-content-wrapper').hide()

        $('.modal-header').remove()
        $('.modal-body').remove()

        $('.modal-overlay').fadeOut()

        $('body').removeClass('no-scrollbar')
    })


    function getReviewDate(unixTime) {
    
        // Convert to milliseconds. The JS Date object can then convert milliseconds into a date.
        // * UnixTime is specified as the amount of seconds that passed since the beginning 
        // * of unix epochf (January 1st, 1970)
        const milliseconds = unixTime * 1000

        const reviewDate = (new Date(milliseconds)).toLocaleString()

        return reviewDate.split(',')[0]
    }
    
})

</script>
</body>
</html>